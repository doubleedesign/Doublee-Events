<div id="mini-map" class="animate not-yet-visible"></div>
<?php
	// Note: This version of the map script supports one location.
	// For multiple locations, see map.php (which gets ALL locations, but could be used to help adapt this file to show multiple locations).

	// The $map_pins array will contain variable names and IDs, to be inserted into the code for markers
	$map_pins = array();

	// Get the ID and data array for this address
	$id = $post->ID;
	$data = doublee_get_address_data($id);

	// Get the name (post title in WP), make it all lowercase, and strip whitespace, numbers and symbols (because they break JS!)
	$name = get_the_title($id);
	$nicename = strtolower($name);
	$nicename = str_replace(' ', '', $nicename); // remove spaces
	$nicename = preg_replace('/[^A-Za-z\-]/', '', $nicename); // remove special characters
	$nicename = preg_replace('/[0-9]+/', '', $nicename); // remove numbers

	// Push into the array
	array_push($map_pins, array(
		'id'		=>	$id,
		'nicename'	=>	$nicename,
	));

	// Put the lat and long into variables that we'll use to build the string
	$this_lat = $data['lat'];
	$this_long = $data['long'];

	// Build the full string required by the JS for the location variable
	// Example output: var geelong = { lat: -38.144575, lng: 144.364066 };
	$data_string = 'var ' . $nicename . ' = { lat: '. $this_lat .', lng: '. $this_long .' };';
?>

<script>
	// Function to create the map
	function initMap() {

		// Create a new StyledMapType object, passing it an array of styles, and the name to be displayed on the map type control (all found in functions/maps/map-style.php)
		<?php
		$theme = wp_get_theme();
		$theme_slug = $theme->get('TextDomain'); ?>
		var styledMapType = new google.maps.StyledMapType(<?php include($_SERVER['DOCUMENT_ROOT'].'/wp-content/themes/'.$theme_slug.'/functions/maps/map-style.php') ?>);

		// Create a map object, and include the MapTypeId to add to the map type control.
		var map = new google.maps.Map(document.getElementById('mini-map'), {
			// the lat and long of a location to be used as the default centre of the map
			center: {lat: <?php echo $this_lat; ?>, lng: <?php echo $this_long; ?>},
			zoom: 16,
			mapTypeControlOptions: {
				mapTypeIds: ['roadmap', 'styled_map']
			}
		});

		// Custom icon
		<?php
		if(function_exists('doublee_get_browser')) {
		if(doublee_get_browser() == 'ie') { ?>
			var icon = '<?php echo get_stylesheet_directory_uri();?>/assets/map-marker.png'; // IE marker pin image
		<?php } else { ?>
			var icon = '<?php echo get_stylesheet_directory_uri();?>/assets/map-marker.svg'; // default marker pin image
		<?php } ?>
		<?php } else { ?>
			var icon = '<?php echo get_stylesheet_directory_uri();?>/assets/map-marker.svg'; // default marker pin image
		<?php } ?>

		<?php
		// Output the variable string generated by PHP above
		echo $data_string;

		// Create the variable names and markers using the variable names generated by PHP above
		foreach ($map_pins as $map_pin) {

			// Grab the nested array values (the IDs and nicenames) as variables
			$id = $map_pin['id'];
			$marker_name = $map_pin['nicename'];

			// Output the JS for the marker
			echo 'var marker' . $id . ' = new google.maps.Marker({';
			echo 'position: ' . $marker_name . ',';
			echo 'map: map,';
			echo 'icon: icon,';
			echo '});';

			// Get the info window content and store it in a variable
			$info = doublee_map_info_box($id);

			// Output the JS required to put the $info content into the relevant JS variable for use in the info windows
			echo "var contentString_marker".$id . " = '".$info."';";

			// Output the JS for the info windows
			echo 'var infowindow'.$id.' = new google.maps.InfoWindow({';
			echo 'content: ' ;
			echo 'contentString_marker'.$id;
			echo '});';

			// Listen for click events on the markers and do stuff
			echo 'marker'. $id .'.addListener("click", function() {';
			echo 'infowindow'.$id.'.open(map, marker'.$id.');'; // Open the info window
			echo 'map.setZoom(17);'; // Zoom in to the location
			echo 'map.setCenter(marker'.$id.'.getPosition());'; // Centre the map at the location
			echo '});';

			// Listen for close click events on the info windows and do stuff
			echo "google.maps.event.addListener(infowindow".$id.", 'closeclick', (function (infowindow".$id.") {";
			echo "return function () {";
			echo "map.setZoom(14);";
			echo "}";
			echo "})(infowindow".$id."));";
		}
		?>

		// Associate the styled map with the MapTypeId and set it to display.
		map.mapTypes.set('styled_map', styledMapType);
		map.setMapTypeId('styled_map');
	}
</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?keyYOUR_KEY_HERE&callback=initMap"></script>